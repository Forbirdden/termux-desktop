#!/data/data/com.termux/files/usr/bin/bash

function zshrc_setup() {
    print_msg "Setup zsh zinit..."
    sleep 1.3
    cd "${HOME}" || return 0
    check_and_backup "$HOME/.zshrc"
    cat <<'EOF' >"$HOME/.zshrc"
# Turn off “no match” errors
setopt nonomatch

# Enable auto-cd
setopt AUTO_CD

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# Load Oh My Zsh libraries
zinit lucid light-mode for \
    OMZL::history.zsh \
    OMZL::completion.zsh \
    OMZL::key-bindings.zsh

# Fix for proot-distro library issues
if [[ -z "$PREFIX" && "$PREFIX" != *"/com.termux/"* ]]; then
    # Set LD_LIBRARY_PATH for proot environments if needed
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib:/lib"
    # Disable commands that might cause errors in proot
    function fix_proot_cmd() {
        if ! command -v $1 &> /dev/null; then
            alias $1="echo '$1 not available in this proot environment'"
        fi
    }
    # Fix commonly problematic commands
    fix_proot_cmd uname
    fix_proot_cmd sleep
    fix_proot_cmd mkdir
fi

# Ensure completion is properly initialized in Termux
if [[ -n "$PREFIX" && "$PREFIX" = *"/com.termux/"* ]]; then
  autoload -Uz compinit
  compinit
fi

# Load plugins with Turbo mode
zinit wait lucid for \
    zdharma-continuum/fast-syntax-highlighting \
    OMZP::colored-man-pages \
    OMZP::git

zinit wait lucid for \
    atload"!_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions

# zsh-fzf-history-search
zinit ice lucid wait
zinit light joshskidmore/zsh-fzf-history-search

# real-time, fish-style type-ahead completion
zinit light marlonrichert/zsh-autocomplete

# Make Tab and ShiftTab go to the menu
bindkey              '^I' menu-select
bindkey "$terminfo[kcbt]" menu-select

# Make Tab and ShiftTab change the selection in the menu
bindkey -M menuselect              '^I'         menu-complete
bindkey -M menuselect "$terminfo[kcbt]" reverse-menu-complete

export PATH="$HOME/.local/bin:$PATH"
EOF

}

function setup_td_zsh_theme() {
    check_and_create_directory "$HOME/.zsh-themes"
    cat <<EOF >"$HOME/.zsh-themes/td.zsh-theme"
# td.zsh-theme - A clean and functional ZSH theme with distro detection
# Created for Termux and proot-distro environments

autoload -Uz colors && colors
autoload -Uz vcs_info
setopt complete_aliases

# Enable Git branch display
zstyle ':vcs_info:git:*' formats ' %F{magenta} %b%f'
precmd() { vcs_info }
setopt PROMPT_SUBST

# Exit status indicator
exit_status="%(?..%F{red}✘ %?%f)"

# Detect distro and set the correct icons
if command -v grep &> /dev/null && [ -f /etc/os-release ]; then
    distro_id=\$(grep '^ID=' /etc/os-release 2>/dev/null | cut -d= -f2 | tr -d '"') 2>/dev/null
else
    distro_id="unknown"
fi

case "\$distro_id" in 
  kali) DISTRO_ICON="" ;;   # Kali Linux
  arch) DISTRO_ICON="" ;;   # Arch Linux
  ubuntu) DISTRO_ICON="" ;; # Ubuntu
  debian) DISTRO_ICON="" ;; # Debian
  fedora) DISTRO_ICON="" ;; # Fedora
  alpine) DISTRO_ICON="" ;; # Alpine
  void) DISTRO_ICON="" ;;   # Void Linux
  opensuse*|sles) DISTRO_ICON="" ;; # openSUSE
  gentoo) DISTRO_ICON="" ;; # Gentoo
  nixos) DISTRO_ICON="" ;; # NixOS
  *) DISTRO_ICON="" ;;      # Default Linux Icon
esac

# Symbols
PROMPT_SYMBOL="%F{green}❯%F{reset}"

# Check if running in Termux and set username accordingly
if [[ -n "\$PREFIX" && "\$PREFIX" == */com.termux/* ]]; then
    user_name="${final_user_name}"
else
    user_name="\$(whoami)"
fi

# User and host info inside a box with DISTRO_ICON in the middle
user_host="%F{blue}[%F{cyan}\$user_name%F{yellow} \$DISTRO_ICON %F{cyan}%m%F{blue}]%f"

# Current directory inside the same box
dir_display="%F{blue}[%F{yellow}%~%F{blue}]%f"

# Prompt layout (P10K-like)
PROMPT='
%B%F{green}╭─ \$user_host \$dir_display\${vcs_info_msg_0_}
%B%F{green}╰─\${PROMPT_SYMBOL} %F{reset}'

# Right prompt shows exit status of previous command
RPROMPT="\$exit_status"
EOF
}

function check_paramitter() {
    if [[ -n "$PREFIX" && "$PREFIX" == *"/com.termux/"* && -z "$user_name" ]]; then
        while true; do
            echo " "
            while true; do
                read -r -p "${R}[${C}-${R}]${G} Input username [Lowercase]: ${W}" user_name
                if [[ -n "$user_name" ]]; then
                    break
                else
                    print_warn "You can't leave the username empty. Please enter a valid username."
                fi
            done
            echo
            local choice
            read -r -p "${R}[${C}-${R}]${Y} Do you want to continue with username ${C}$user_name ${Y}? (y/n) : ${W}" choice
            echo
            choice="${choice:-y}"
            echo
            print_success "Continuing with answer: $choice"
            sleep 0.2
            case $choice in
            [yY]*)
                print_success "Continuing with username ${C}$user_name"
                break
                ;;
            [nN]*)
                print_msg "Please provide username again."
                echo
                ;;
            *)
                print_failed "Invalid input, Please enter y or n"
                ;;
            esac
        done
    fi
    final_user_name="${user_name}"
}

function set_theme() {
    if [[ "$selected_zsh_theme_name" == "td_zsh" ]]; then
        check_paramitter
        setup_td_zsh_theme
        cat <<'EOF' >>"$HOME/.zshrc"
# Load theme
source "$HOME/.zsh-themes/td.zsh-theme"
EOF
    elif [[ "$selected_zsh_theme_name" == "p10k_zsh" ]]; then
        cat <<'EOF' >>"$HOME/.zshrc"
# Powerlevel10k Theme.
zinit ice depth=1; zinit light romkatv/powerlevel10k
EOF
    elif [[ "$selected_zsh_theme_name" == "pure_zsh" ]]; then
        cat <<'EOF' >>"$HOME/.zshrc"
# Load pure theme
zinit ice pick"async.zsh" src"pure.zsh" # with zsh-async library that's bundled with it.
zinit light sindresorhus/pure
EOF
    else
        check_paramitter
        setup_td_zsh_theme
        cat <<'EOF' >>"$HOME/.zshrc"
# Load theme
source "$HOME/.zsh-themes/td.zsh-theme"
EOF
    fi
    NO_INPUT=1 bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)" && chsh -s zsh
}

zshrc_setup
set_theme
